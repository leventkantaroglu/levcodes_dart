<root>
	<analyzer>
		<language>
			<strict-casts>true</strict-casts>
			<strict-raw-types>true</strict-raw-types>
		</language>
		<errors>
			<deprecated_member_use_from_same_package>ignore</deprecated_member_use_from_same_package>
		</errors>
		<exclude>bin/cache/**</exclude>
		<exclude>dev/conductor/lib/proto/*</exclude>
	</analyzer>
	<linter>
		<rules>always_declare_return_types</rules>
		<rules>always_put_control_body_on_new_line</rules>
		<rules>always_specify_types</rules>
		<rules>annotate_overrides</rules>
		<rules>avoid_bool_literals_in_conditional_expressions</rules>
		<rules>avoid_double_and_int_checks</rules>
		<rules>avoid_dynamic_calls</rules>
		<rules>avoid_empty_else</rules>
		<rules>avoid_equals_and_hash_code_on_mutable_classes</rules>
		<rules>avoid_escaping_inner_quotes</rules>
		<rules>avoid_field_initializers_in_const_classes</rules>
		<rules>avoid_function_literals_in_foreach_calls</rules>
		<rules>avoid_init_to_null</rules>
		<rules>avoid_js_rounded_ints</rules>
		<rules>avoid_null_checks_in_equality_operators</rules>
		<rules>avoid_print</rules>
		<rules>avoid_redundant_argument_values</rules>
		<rules>avoid_relative_lib_imports</rules>
		<rules>avoid_renaming_method_parameters</rules>
		<rules>avoid_return_types_on_setters</rules>
		<rules>avoid_returning_null_for_void</rules>
		<rules>avoid_setters_without_getters</rules>
		<rules>avoid_shadowing_type_parameters</rules>
		<rules>avoid_single_cascade_in_expression_statements</rules>
		<rules>avoid_slow_async_io</rules>
		<rules>avoid_type_to_string</rules>
		<rules>avoid_types_as_parameter_names</rules>
		<rules>avoid_unnecessary_containers</rules>
		<rules>avoid_unused_constructor_parameters</rules>
		<rules>avoid_void_async</rules>
		<rules>await_only_futures</rules>
		<rules>camel_case_extensions</rules>
		<rules>camel_case_types</rules>
		<rules>cancel_subscriptions</rules>
		<rules>cast_nullable_to_non_nullable</rules>
		<rules>collection_methods_unrelated_type</rules>
		<rules>combinators_ordering</rules>
		<rules>conditional_uri_does_not_exist</rules>
		<rules>control_flow_in_finally</rules>
		<rules>curly_braces_in_flow_control_structures</rules>
		<rules>dangling_library_doc_comments</rules>
		<rules>depend_on_referenced_packages</rules>
		<rules>deprecated_consistency</rules>
		<rules>directives_ordering</rules>
		<rules>empty_catches</rules>
		<rules>empty_constructor_bodies</rules>
		<rules>empty_statements</rules>
		<rules>eol_at_end_of_file</rules>
		<rules>exhaustive_cases</rules>
		<rules>file_names</rules>
		<rules>flutter_style_todos</rules>
		<rules>hash_and_equals</rules>
		<rules>implementation_imports</rules>
		<rules>implicit_call_tearoffs</rules>
		<rules>implicit_reopen</rules>
		<rules>invalid_case_patterns</rules>
		<rules>leading_newlines_in_multiline_strings</rules>
		<rules>library_annotations</rules>
		<rules>library_names</rules>
		<rules>library_prefixes</rules>
		<rules>library_private_types_in_public_api</rules>
		<rules>missing_whitespace_between_adjacent_strings</rules>
		<rules>no_adjacent_strings_in_list</rules>
		<rules>no_default_cases</rules>
		<rules>no_duplicate_case_values</rules>
		<rules>no_leading_underscores_for_library_prefixes</rules>
		<rules>no_leading_underscores_for_local_identifiers</rules>
		<rules>no_literal_bool_comparisons</rules>
		<rules>no_logic_in_create_state</rules>
		<rules>no_self_assignments</rules>
		<rules>no_wildcard_variable_uses</rules>
		<rules>non_constant_identifier_names</rules>
		<rules>noop_primitive_operations</rules>
		<rules>null_check_on_nullable_type_parameter</rules>
		<rules>null_closures</rules>
		<rules>only_throw_errors</rules>
		<rules>overridden_fields</rules>
		<rules>package_api_docs</rules>
		<rules>package_names</rules>
		<rules>package_prefixed_library_names</rules>
		<rules>prefer_adjacent_string_concatenation</rules>
		<rules>prefer_asserts_in_initializer_lists</rules>
		<rules>prefer_collection_literals</rules>
		<rules>prefer_conditional_assignment</rules>
		<rules>prefer_const_constructors</rules>
		<rules>prefer_const_constructors_in_immutables</rules>
		<rules>prefer_const_declarations</rules>
		<rules>prefer_const_literals_to_create_immutables</rules>
		<rules>prefer_contains</rules>
		<rules>prefer_final_fields</rules>
		<rules>prefer_final_in_for_each</rules>
		<rules>prefer_final_locals</rules>
		<rules>prefer_for_elements_to_map_fromIterable</rules>
		<rules>prefer_foreach</rules>
		<rules>prefer_function_declarations_over_variables</rules>
		<rules>prefer_generic_function_type_aliases</rules>
		<rules>prefer_if_elements_to_conditional_expressions</rules>
		<rules>prefer_if_null_operators</rules>
		<rules>prefer_initializing_formals</rules>
		<rules>prefer_inlined_adds</rules>
		<rules>prefer_interpolation_to_compose_strings</rules>
		<rules>prefer_is_empty</rules>
		<rules>prefer_is_not_empty</rules>
		<rules>prefer_is_not_operator</rules>
		<rules>prefer_iterable_whereType</rules>
		<rules>prefer_mixin</rules>
		<rules>prefer_null_aware_operators</rules>
		<rules>prefer_relative_imports</rules>
		<rules>prefer_single_quotes</rules>
		<rules>prefer_spread_collections</rules>
		<rules>prefer_typing_uninitialized_variables</rules>
		<rules>prefer_void_to_null</rules>
		<rules>provide_deprecation_message</rules>
		<rules>recursive_getters</rules>
		<rules>secure_pubspec_urls</rules>
		<rules>sized_box_for_whitespace</rules>
		<rules>sized_box_shrink_expand</rules>
		<rules>slash_for_doc_comments</rules>
		<rules>sort_child_properties_last</rules>
		<rules>sort_constructors_first</rules>
		<rules>sort_unnamed_constructors_first</rules>
		<rules>test_types_in_equals</rules>
		<rules>throw_in_finally</rules>
		<rules>tighten_type_of_initializing_formals</rules>
		<rules>type_init_formals</rules>
		<rules>type_literal_in_constant_pattern</rules>
		<rules>unnecessary_await_in_return</rules>
		<rules>unnecessary_brace_in_string_interps</rules>
		<rules>unnecessary_breaks</rules>
		<rules>unnecessary_const</rules>
		<rules>unnecessary_constructor_name</rules>
		<rules>unnecessary_getters_setters</rules>
		<rules>unnecessary_late</rules>
		<rules>unnecessary_library_directive</rules>
		<rules>unnecessary_new</rules>
		<rules>unnecessary_null_aware_assignments</rules>
		<rules>unnecessary_null_aware_operator_on_extension_on_nullable</rules>
		<rules>unnecessary_null_checks</rules>
		<rules>unnecessary_null_in_if_null_operators</rules>
		<rules>unnecessary_nullable_for_final_variable_declarations</rules>
		<rules>unnecessary_overrides</rules>
		<rules>unnecessary_parenthesis</rules>
		<rules>unnecessary_statements</rules>
		<rules>unnecessary_string_escapes</rules>
		<rules>unnecessary_string_interpolations</rules>
		<rules>unnecessary_this</rules>
		<rules>unnecessary_to_list_in_spreads</rules>
		<rules>unreachable_from_main</rules>
		<rules>unrelated_type_equality_checks</rules>
		<rules>unsafe_html</rules>
		<rules>use_build_context_synchronously</rules>
		<rules>use_colored_box</rules>
		<rules>use_enums</rules>
		<rules>use_full_hex_values_for_flutter_colors</rules>
		<rules>use_function_type_syntax_for_parameters</rules>
		<rules>use_if_null_to_convert_nulls_to_bools</rules>
		<rules>use_is_even_rather_than_modulo</rules>
		<rules>use_key_in_widget_constructors</rules>
		<rules>use_late_for_private_fields_and_variables</rules>
		<rules>use_named_constants</rules>
		<rules>use_raw_strings</rules>
		<rules>use_rethrow_when_possible</rules>
		<rules>use_setters_to_change_properties</rules>
		<rules>use_string_in_part_of_directives</rules>
		<rules>use_super_parameters</rules>
		<rules>use_test_throws_matchers</rules>
		<rules>valid_regexps</rules>
		<rules>void_checks</rules>
	</linter>
	<myKey>myValue</myKey>
</root>